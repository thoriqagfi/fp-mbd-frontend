import withAuth from '@/components/hoc/withAuth';
import StoreMainPage from '@/components/storePage/storeMainPage';
import { useQuery } from '@tanstack/react-query';
import { useRouter } from 'next/router';

import Head from 'next/head';
import * as React from 'react';

import { FormProvider, FormProviderProps, useForm } from 'react-hook-form';
import { useMutation } from '@tanstack/react-query';
import toast, { Toaster } from 'react-hot-toast';
import { apiMock } from '@/lib/apiMock';
import Link from 'next/link';

import { Carousel } from '@mantine/carousel';
import Layout from '@/Layout/Layout';
import { Search, PlayerTrackNext, PlayerTrackPrev } from 'tabler-icons-react';
import type { InferGetStaticPropsType, GetStaticProps } from 'next';
import { rupiah } from '@/lib/rupiah';
//import Loading from '../Loading';

export type IdData = {
  id: String;
};

export type SearchData = {
  keyword: string;
};

export type GameDataResponse = {
  data: DLCData;
  code: number;
  message: string;
  success: boolean;
};

export type DLCData = {
  id: string;
  nama: string;
  deskripsi: string;
  harga: number;
  system_min: string;
  system_rec: string;
  picture: string;
};

// export default withAuth(GameDetail, 'auth');

export default function DLCDetail() {
  const { id } = useRouter().query;
  
  const [openTab, setOpenTab] = React.useState(1);
  const { isLoading, error, data } = useQuery(
    ['dlc_detail'],
    async () => {
      const dlcID = id;
      const {data} = await apiMock.get(`/storeMainPage/dlc/${dlcID}`);
      //console.log(data.data.game_picture);
      return data;
    }
  );

  const methods = useForm<SearchData>({
    mode: 'onChange',
    defaultValues: {
      keyword: '',
    },
  });

  const {
    handleSubmit,
    formState,
    reset,
    formState: { errors },
  } = methods;

  React.useEffect(() => {
    if (formState.isSubmitSuccessful) {
      reset({
        keyword: '',
      });
    }
  }, [formState, reset]);

  return (
    <>
      <Head>
        <title>Game Page</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Layout>
        <main className='bg-blue-200 dark:bg-slate-800'>
          <div className='container w-10/12 flex flex-col px-0 mt-1 mx-auto'>
            <p className='ml-2 mt-10 mb-5 font-medium text-2xl'>{data?.data.nama}</p>

            <div className='container w-full flex flex-col-reverse md:flex-row px-0 bg-slate-900'>
              <div className='w-full flex md:w-2/3 p-0'>
                <div className='align-center w-full my-auto'>
                    <img
                    src={data?.data.picture}
                    className='img-fluid w-full h-auto'
                    alt='Game image'
                    />
                </div>
              </div>

              <div className='w-full md:w-1/3 p-3'>
                <img
                  src={data?.data.picture}
                  className='img-fluid w-full h-auto'
                  alt='Game image'
                />
                <div className='G-desk m-2'>
                  <p className='my-0 text-light text-lg'>
                    {data?.data.deskripsi}
                  </p>
                  <br />                  
                </div>
              </div>
            </div>

            <div className='container flex flex-col md:flex-row px-0 mt-3'>
              <div className='container w-full md:w-2/3 flex flex-col m-0 p-0 h-100'>
                <div className='w-full bg-slate-700 block rounded p-5'>
                  <h5 className='ml-2 mt-4 font-medium text-lg w-2/3'>
                    Get {data?.data.nama} DLC
                  </h5>
                  <Link href={`/transaksiDLC/${data?.data.id}`}>
                    <button className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded float-right'>
                      {rupiah(data?.data.harga == undefined ? 0 : data?.data.harga)}
                    </button>
                  </Link>
                </div>

                <div className='container col-12 my-2 py-3'>
                  <div className='w-full bg-slate-900 p-5'>
                    <div className='flex flex-wrap'>
                      <div className='w-full'>
                        <ul
                          className='w-full lg:w-1/3 flex mb-0 list-none flex-row'
                          role='tablist'
                        >
                          <li className='-mb-px mr-2 last:mr-0 flex-auto text-center'>
                            <a
                              className={
                                'text-xs font-bold uppercase px-5 py-3 shadow-lg rounded-t-sm block leading-normal ' +
                                (openTab === 1
                                  ? 'text-white bg-slate-700'
                                  : 'text-white bg-blueGray-600')
                              }
                              onClick={(e) => {
                                e.preventDefault();
                                setOpenTab(1);
                              }}
                              data-toggle='tab'
                              href='#link1'
                              role='tablist'
                            >
                              Minimum
                            </a>
                          </li>
                          <li className='-mb-px mr-2 last:mr-0 flex-auto text-center'>
                            <a
                              className={
                                'text-xs font-bold uppercase px-5 py-3 shadow-lg rounded-t-sm block leading-normal' +
                                (openTab === 2
                                  ? 'text-white bg-slate-700'
                                  : 'text-white bg-blueGray-600')
                              }
                              onClick={(e) => {
                                e.preventDefault();
                                setOpenTab(2);
                              }}
                              data-toggle='tab'
                              href='#link2'
                              role='tablist'
                            >
                              Recommended
                            </a>
                          </li>
                        </ul>
                        <div className='relative flex flex-col min-w-0 break-words w-full mb-1 shadow-lg rounded-b-sm bg-slate-700'>
                          <div className='px-4 py-5 flex-auto'>
                            <div className='tab-content tab-space'>
                              <div
                                className={openTab === 1 ? 'block' : 'hidden'}
                                id='link1'
                              >
                                <p>
                                  {data?.data.system_min}
                                </p>
                              </div>
                              <div
                                className={openTab === 2 ? 'block' : 'hidden'}
                                id='link2'
                              >
                                {data?.data.system_rec}
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/*)))}
           */}
        </main>
      </Layout>
    </>
  );
}
