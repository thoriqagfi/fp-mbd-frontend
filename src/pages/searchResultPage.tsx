import Head from "next/head";
import * as React from 'react';
import { useEffect } from 'react';
import Image from 'next/image';
import { useQuery } from '@tanstack/react-query';

import { FormProvider, FormProviderProps, useForm } from 'react-hook-form';
import { useMutation } from '@tanstack/react-query';
import { useRouter } from 'next/router';
import toast, {Toaster} from "react-hot-toast";
import { apiMock } from '@/lib/apiMock';
import SelectInput from '@/components/SelectInput';

import { Carousel } from '@mantine/carousel';
import Layout from "@/Layout/Layout";
import { Search, PlayerTrackNext, PlayerTrackPrev } from 'tabler-icons-react';
import { rupiah } from "@/lib/rupiah";

export type SearchData = {
    keyword: string;
}

export const tagData = [
    'Action',
    'Multiplayer',
    'Competitive',
    'Survival',
    'Battle Royale',
    'Shooter',
    'Horror',
    'Local & Party',
    'Open World',
    'Sports',
    'Strategy',
    'Moba',
    'PvP',
    'Simulation',
    'Fantasy',
    'Rpg',
    'Tactical',
    'Team-Based',
    'MMORPG',
    'Adventure'
  ];

  export type TagSend = {
    nama: string;
  }

  export type GameData = {
    id: number;
    nama: string;
    deskripsi: string;
    release_date: string;
    harga: number;
    age_rating: string;
    system_min: string;
    system_rec: string;
    picture: string;
    video: string;
    developer: string;
  };

export default function SearchResultPage(){
    const router = useRouter();
    const listGame: GameData[] = [];
    const {tag} = router.query;
    console.log(tag);
    /*
      const { isLoading, error, data } = useQuery(
        ['game'],
        async (dataSend) => {
          const tagName = keyword;
          const res = await apiMock.get(`/storeMainPage/filter`, dataSend);
          console.log(dataSend);
          return res.data;
        }
      );*/

  

    return(
        <>
            <Head>
                <title>Search Result</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Layout>
            <main className="bg-blue-200 dark:bg-slate-800 min-h-[85vh]">
                <div className="px-[5%] lg:px-[10%] py-5">
                    <p>Search results for "{tag}"</p>
                </div>
                <div className="w-11/12 lg:w-4/5 mx-auto">
                    <div className="w-full flex flex-row">
                        <div className="w-4/5">
                            {listGame && listGame?.map((item)=> 
                            <a href={`/game/${item.id}`} className="flex flex-col items-center bg-white border border-gray-200 rounded-lg shadow md:flex-row w-full hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700 mb-3">
                                <Image height={500} width={500} className="object-cover h-full w-auto rounded-t-lg md:h-auto md:w-48 md:rounded-none md:rounded-l-lg" src="https://drive.google.com/uc?export=view&id=1_jTTRDcgx3qJa6hI-PSbR-EDGJ_Rup8N" alt=""/>
                                <div className="flex flex-col justify-between p-4 leading-normal pl-5 w-full">
                                    <h5 className="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">{item.nama}</h5>
                                    <p className="font-normal text-gray-700 dark:text-gray-400">{item.deskripsi}</p>
                                </div>
                                <div className="flex flex-col p-4 leading-normal pl-5 w-full items-end">
                                    <p className="font-semibold text-gray-700 dark:text-white p-0 md:pr-8">{rupiah(item.harga)}</p>
                                </div>
                            </a>
                            )}
                        </div>
                        <div className="w-1/5 bg-slate-900">
                            <div className="w-full flex flex-row lg:flex-col gap-4">
                                <ul className="text-sm text-gray-700 dark:text-gray-200">
                                {tagData.map((item)=>
                                    <li>           
                                        <a onClick={() =>
                                        router.push({
                                        pathname: '/searchResultPage',
                                        query: { tag: `${item}` },
                                        })
                                        }
                                        className="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">{item}</a>
                                    </li>
                                )}
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
            </Layout>
        </>
    )
}